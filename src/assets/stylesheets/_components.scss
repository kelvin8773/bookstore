/* component customize */

//
// Progress Circle
// https://codepen.io/felipefialho/pen/vGMJBN?editors=0110
// ==================================================

@function number($string) {
  // Matrices
  $strings: '0''1''2''3''4''5''6''7''8''9';
  $numbers: 0 1 2 3 4 5 6 7 8 9;

  // Result
  $result: 0;

  // Looping through all characters
  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);

    @if not $index {
      @warn "Unknown character `#{$character}`.";
      @return 0;
    }

    $number: nth($numbers, $index);
    $result: $result * 10+$number;
  }

  @return $result;
}

$theme-color: #0083ff;
$back-color: #dddddd;
$size: 6rem;

$percentage: number('45');
$next-deg: 90deg+3.6 * $percentage;

.progress-circle {
  width: $size;
  height: $size;
  background-color: $back-color;
  border-radius: 50%;
  display: inline-block;
  position: relative;
  text-align: center;

  &:before {
    align-items: center;
    background-color: #fff;
    border-radius: 50%;
    content: attr(data-progress)'%';
    display: flex;
    font-size: $size / 4;
    justify-content: center;
    position: absolute;
    left: $size/10;
    right: $size/10;
    top: $size/10;
    bottom: $size/10;
    transition: transform .2s ease;
  }

  &:after {
    // background-color: $theme-color;
    border-radius: 50%;
    content: '';
    display: inline-block;
    width: 100%;
    height: 100%;
    background-image:
      linear-gradient(90deg, $back-color 50%, transparent 50%, transparent),
      linear-gradient($next-deg, $theme-color 50%, $back-color 50%, $back-color);
  }

  &:hover,
  &:focus,
  &:before {
    transform: scale(0.99);
  }
}

/**
* $step is set to 5 by default, meaning you can only use percentage classes in increments of five (e.g. 25, 30, 45, 50, and so on). This helps to reduce the size of the final CSS file. If you need a number that doesn't end in 0 or 5, you can change the text percentage while rounding the class up/down to the nearest 5.
*/

$step: 1;
$loops: round(100 / $step);
$increment: 360 / $loops;
$half: round($loops / 2);

@for $i from 0 through $loops {
  .progress-circle[data-progress="{$i * $step}"] {
    &:after {
      @if $i < $half {
        $next-deg: 90deg + $increment * $i;
        background-image:
          linear-gradient(90deg, $back-color 50%, transparent 50%, transparent),
          linear-gradient($next-deg, $theme-color 50%, $back-color 50%, $back-color);
      }

      @else {
        $next-deg: -90deg + $increment * ($i - $half);
        background-image:
          linear-gradient($next-deg, $theme-color 50%, transparent 50%, transparent),
          linear-gradient(270deg, $theme-color 50%, $back-color 50%, $back-color);
      }
    }
  }
}

//Button

.btn {
  padding: 0.65rem 2.3rem;
  border-radius: 5px;
  background-color: $theme-color;
  color: $back-color;
  text-align: center;
}

.btn:hover {
  cursor: pointer;
  opacity: 40%;
  box-shadow: 9px 6px 10px -11px rgba(100, 236, 255, 0.5);
}